//MARK: - UITextFieldDelegate
extension XPlaceHoldViewController: UITextFieldDelegate {

    func textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
        switch textField {
        case pickupNode.textField:
            guard let vc = makeVC(title: "Pickup Location", options: orgLabels, selectedIndex: selectedOrgIndex) else { return true }
            vc.selectionChangedHandler = { index, trimmedLabel in
                self.selectedOrgIndex = index
                self.pickupNode.textField?.text = trimmedLabel
            }
            vc.optionIsEnabled = self.orgIsPickupLocation
            vc.optionIsPrimary = self.orgIsPrimary
            self.navigationController?.pushViewController(vc, animated: true)
            return false
        case carrierNode.textField:
            guard let vc = makeVC(title: "SMS Carrier", options: carrierLabels, selectedOption: selectedCarrierName) else { return true }
            vc.selectionChangedHandler = { index, trimmedLabel in
                self.selectedCarrierName = trimmedLabel
                self.carrierNode.textField?.text = trimmedLabel
            }
            self.navigationController?.pushViewController(vc, animated: true)
            return false
        case partNode.textField:
            guard let vc = makeVC(title: "Select a part", options: partLabels, selectedOption: selectedPartLabel) else { return true }
            vc.selectionChangedHandler = { index, trimmedLabel in
                self.selectedPartLabel = trimmedLabel
                self.partNode.textField?.text = trimmedLabel
            }
            self.navigationController?.pushViewController(vc, animated: true)
            return false
        case expirationNode.textField:
            expirationPickerVisible = !expirationPickerVisible
            if expirationPickerVisible { thawPickerVisible = false }
            self.scrollNode.transitionLayout(withAnimation: true, shouldMeasureAsync: true) {
                guard self.expirationPickerVisible else { return }
                // This is a Good Enough workaround for the fact that on a small screen, transitioning
                // the date picker into view can move the Place Hold button off screen.  This scrolls
                // slightly too high, but it brings the Place Hold button back on screen.  Doing a
                // scrollToEnd() without the delay does not work, because the scrollView.bounds.size.height is
                // not settled yet.  After a short delay it is closer but still not correct.
                firstly {
                    return after(seconds: 0.1)
                }.done {
                    self.scrollToEnd()
                }
            }
            return false
        case thawNode.textField:
            thawPickerVisible = !thawPickerVisible
            if thawPickerVisible { expirationPickerVisible = false }
            self.scrollNode.transitionLayout(withAnimation: true, shouldMeasureAsync: true) {
                guard self.thawPickerVisible else { return }
                firstly {
                    return after(seconds: 0.1)
                }.done {
                    self.scrollToEnd()
                }
            }
            return false
        default:
            return true
        }
    }
}
